{"ast":null,"code":"var _jsxFileName = \"/Users/ankush/Library/CloudStorage/OneDrive-Personal/Dev/Academind/React/12-React-Redux/src/components/Counter.js\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useRef } from \"react\";\nimport { counterActions } from \"../store\";\nimport classes from \"./Counter.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  const counter = useSelector(state => state.counter);\n  const showCounter = useSelector(state => state.showCounter);\n  const dispatch = useDispatch();\n  // console.log(dispatch);\n  // console.log(\"---------------\");\n  // console.log(counter);\n\n  /*\n  // NOTE: Using reduc without toolkit\n  const incrementHandler = () => dispatch({ type: \"inc\" });\n  const decrementHandler = () => dispatch({ type: \"dec\" });\n  const increaseHandler = () => dispatch({ type: \"increase\", amount: 5 });\n  const toggleCounterHandler = () => dispatch({ type: \"toggle\" });\n  */\n\n  //NOTE: Using redux-toolkit:\n  const incrementHandler = () => dispatch(counterActions.increment());\n  const decrementHandler = () => dispatch(counterActions.decrement());\n  const increaseHandler = () => dispatch(counterActions.increase());\n  const toggleCounterHandler = () => dispatch(counterActions.toggleCounter());\n  // My additions: (Creating a dispatcher that dispatches increase action type based on input field)\n  const inputRef = useRef();\n  const raiseByInputAmount = () => {\n    const amount = +inputRef.current.value || 0;\n    console.log(amount);\n    dispatch(counterActions.increase(), {\n      amount\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: showCounter ? counter : \"Counter Hidden\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: incrementHandler,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: increaseHandler,\n        children: \"Increase by 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: decrementHandler,\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: raiseByInputAmount,\n        children: \"Raise by amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Counter, \"ng7u1kyOtxS0rNpqANqxO4pYjJE=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["useDispatch","useSelector","useRef","counterActions","classes","jsxDEV","_jsxDEV","Counter","_s","counter","state","showCounter","dispatch","incrementHandler","increment","decrementHandler","decrement","increaseHandler","increase","toggleCounterHandler","toggleCounter","inputRef","raiseByInputAmount","amount","current","value","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","ref","_c","$RefreshReg$"],"sources":["/Users/ankush/Library/CloudStorage/OneDrive-Personal/Dev/Academind/React/12-React-Redux/src/components/Counter.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { useRef } from \"react\";\nimport { counterActions } from \"../store\";\nimport classes from \"./Counter.module.css\";\n\nconst Counter = () => {\n  const counter = useSelector((state) => state.counter);\n  const showCounter = useSelector((state) => state.showCounter);\n  const dispatch = useDispatch();\n  // console.log(dispatch);\n  // console.log(\"---------------\");\n  // console.log(counter);\n\n  /*\n  // NOTE: Using reduc without toolkit\n  const incrementHandler = () => dispatch({ type: \"inc\" });\n  const decrementHandler = () => dispatch({ type: \"dec\" });\n  const increaseHandler = () => dispatch({ type: \"increase\", amount: 5 });\n  const toggleCounterHandler = () => dispatch({ type: \"toggle\" });\n  */\n\n  //NOTE: Using redux-toolkit:\n  const incrementHandler = () => dispatch(counterActions.increment());\n  const decrementHandler = () => dispatch(counterActions.decrement());\n  const increaseHandler = () => dispatch(counterActions.increase());\n  const toggleCounterHandler = () => dispatch(counterActions.toggleCounter());\n  // My additions: (Creating a dispatcher that dispatches increase action type based on input field)\n  const inputRef = useRef();\n  const raiseByInputAmount = () => {\n    const amount = +inputRef.current.value || 0;\n    console.log(amount);\n    dispatch(counterActions.increase(), { amount });\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>{showCounter ? counter : \"Counter Hidden\"}</div>\n      <div>\n        <button type=\"button\" onClick={incrementHandler}>\n          Increment\n        </button>\n        <button type=\"button\" onClick={increaseHandler}>\n          Increase by 5\n        </button>\n        <button type=\"button\" onClick={decrementHandler}>\n          Decrement\n        </button>\n      </div>\n      <div>\n        <input type=\"number\" ref={inputRef} />\n        <button type=\"button\" onClick={raiseByInputAmount}>\n          Raise by amount\n        </button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}