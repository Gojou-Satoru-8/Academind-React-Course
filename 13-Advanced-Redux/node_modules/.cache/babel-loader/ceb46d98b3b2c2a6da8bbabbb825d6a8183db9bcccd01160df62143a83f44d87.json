{"ast":null,"code":"var _jsxFileName = \"/Users/ankush/Library/CloudStorage/OneDrive-Personal/Dev/Academind/React/13-Advanced-Redux/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/Notification/Notification\";\nimport { uiActions, sendCartData } from \"./store/index\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet isInitial = true; // For blocking API request on the first load\n\nfunction App() {\n  _s();\n  const cartIsVisible = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  // NOTE: useSelector sets up a subscription to the redux store, meaning that upon the state being updated,\n  // this component will be re-executed / re-rendered, thus the fetch() inside useEffect() will be called\n  // accordingly.\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // const sendCartData = async () => {};\n    if (isInitial) {\n      // Will block the code from executing sendCartData for the first time.\n      isInitial = false;\n      return;\n    }\n    sendCartData(cart);\n  }, [cart, dispatch]); // NOTE: While user-defined functions should be using useCallback, dispatch isn't\n  // required to undergo the transformation because redux will take care of that.\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [cartIsVisible && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"ehCohhP2aa32ZqjJpKSQJfg1I0A=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useSelector","useDispatch","Cart","Layout","Products","Notification","uiActions","sendCartData","jsxDEV","_jsxDEV","Fragment","_Fragment","isInitial","App","_s","cartIsVisible","state","ui","cart","notification","dispatch","children","status","title","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ankush/Library/CloudStorage/OneDrive-Personal/Dev/Academind/React/13-Advanced-Redux/src/App.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/Notification/Notification\";\nimport { uiActions, sendCartData } from \"./store/index\";\n\nlet isInitial = true; // For blocking API request on the first load\n\nfunction App() {\n  const cartIsVisible = useSelector((state) => state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n  const notification = useSelector((state) => state.ui.notification);\n  // NOTE: useSelector sets up a subscription to the redux store, meaning that upon the state being updated,\n  // this component will be re-executed / re-rendered, thus the fetch() inside useEffect() will be called\n  // accordingly.\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // const sendCartData = async () => {};\n    if (isInitial) {\n      // Will block the code from executing sendCartData for the first time.\n      isInitial = false;\n      return;\n    }\n    sendCartData(cart);\n  }, [cart, dispatch]); // NOTE: While user-defined functions should be using useCallback, dispatch isn't\n  // required to undergo the transformation because redux will take care of that.\n  return (\n    <>\n      {notification && (\n        <Notification status={notification.status} title={notification.title} message={notification.message} />\n      )}\n      <Layout>\n        {cartIsVisible && <Cart />}\n        <Products />\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,YAAY,MAAM,wCAAwC;AACjE,SAASC,SAAS,EAAEC,YAAY,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExD,IAAIC,SAAS,GAAG,IAAI,CAAC,CAAC;;AAEtB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,aAAa,GAAGf,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACC,EAAE,CAACF,aAAa,CAAC;EACpE,MAAMG,IAAI,GAAGlB,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACE,IAAI,CAAC;EAC/C,MAAMC,YAAY,GAAGnB,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACC,EAAE,CAACE,YAAY,CAAC;EAClE;EACA;EACA;;EAEA,MAAMC,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAC9BF,SAAS,CAAC,MAAM;IACd;IACA,IAAIa,SAAS,EAAE;MACb;MACAA,SAAS,GAAG,KAAK;MACjB;IACF;IACAL,YAAY,CAACW,IAAI,CAAC;EACpB,CAAC,EAAE,CAACA,IAAI,EAAEE,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtB;EACA,oBACEX,OAAA,CAAAE,SAAA;IAAAU,QAAA,GACGF,YAAY,iBACXV,OAAA,CAACJ,YAAY;MAACiB,MAAM,EAAEH,YAAY,CAACG,MAAO;MAACC,KAAK,EAAEJ,YAAY,CAACI,KAAM;MAACC,OAAO,EAAEL,YAAY,CAACK;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACvG,eACDnB,OAAA,CAACN,MAAM;MAAAkB,QAAA,GACJN,aAAa,iBAAIN,OAAA,CAACP,IAAI;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1BnB,OAAA,CAACL,QAAQ;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA,eACT,CAAC;AAEP;AAACd,EAAA,CA9BQD,GAAG;EAAA,QACYb,WAAW,EACpBA,WAAW,EACHA,WAAW,EAKfC,WAAW;AAAA;AAAA4B,EAAA,GARrBhB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}