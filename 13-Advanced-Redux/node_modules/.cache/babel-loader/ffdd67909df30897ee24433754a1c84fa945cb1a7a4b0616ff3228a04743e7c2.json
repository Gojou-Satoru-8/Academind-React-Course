{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst uiSlice = createSlice({\n  name: \"ui\",\n  initialState: {\n    cartIsVisible: false\n  },\n  reducers: {\n    toggleCart: state => ({\n      cartIsVisible: !state.cartIsVisible\n    })\n  }\n});\n\n// const uiSlice = createSlice({\n//   name: \"items\",\n//   initialState: {},\n//   reducers: {\n//     addItem: (state, action) => {\n//       const currentItemTitle = action.payload.title;\n//       console.log(action.payload.title);\n\n//       if (state[currentItemTitle]) return { ...state, [currentItemTitle]: state[currentItemTitle] + 1 };\n//       else return { ...state, [currentItemTitle]: 1 };\n//     },\n//     removeItem: (state, action) => {\n//       const currentItemTitle = action.payload.title;\n//       if (!state[currentItemTitle]) return; // If there is no itemId in the state object yet\n//       //(ie deletion called before addition)\n//       const newState = { ...state, [currentItemTitle]: state.currentItemTitle - 1 };\n//       if (newState[currentItemTitle] === 0) delete newState[currentItemTitle];\n//       return newState;\n//     },\n//     addItemToCartFirstTime: (state, action) => {\n//       const currentItemTitle = action.payload.title;\n//       if (state[currentItemTitle] >= 1) return;\n//       else return { ...state, [currentItemTitle]: 1 };\n//     },\n//   },\n// });\n\nconst store = configureStore({\n  reducer: {\n    ui: uiSlice.reducer\n    // shoppingCart: cartSlice.reducer,\n  }\n});\nexport const uiActions = uiSlice.actions;\n// export const shoppingCartActions = cartSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","uiSlice","name","initialState","cartIsVisible","reducers","toggleCart","state","store","reducer","ui","uiActions","actions"],"sources":["/Users/ankush/Library/CloudStorage/OneDrive-Personal/Dev/Academind/React/13-Advanced-Redux/src/store/index.js"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\n\nconst uiSlice = createSlice({\n  name: \"ui\",\n  initialState: { cartIsVisible: false },\n  reducers: {\n    toggleCart: (state) => ({ cartIsVisible: !state.cartIsVisible }),\n  },\n});\n\n// const uiSlice = createSlice({\n//   name: \"items\",\n//   initialState: {},\n//   reducers: {\n//     addItem: (state, action) => {\n//       const currentItemTitle = action.payload.title;\n//       console.log(action.payload.title);\n\n//       if (state[currentItemTitle]) return { ...state, [currentItemTitle]: state[currentItemTitle] + 1 };\n//       else return { ...state, [currentItemTitle]: 1 };\n//     },\n//     removeItem: (state, action) => {\n//       const currentItemTitle = action.payload.title;\n//       if (!state[currentItemTitle]) return; // If there is no itemId in the state object yet\n//       //(ie deletion called before addition)\n//       const newState = { ...state, [currentItemTitle]: state.currentItemTitle - 1 };\n//       if (newState[currentItemTitle] === 0) delete newState[currentItemTitle];\n//       return newState;\n//     },\n//     addItemToCartFirstTime: (state, action) => {\n//       const currentItemTitle = action.payload.title;\n//       if (state[currentItemTitle] >= 1) return;\n//       else return { ...state, [currentItemTitle]: 1 };\n//     },\n//   },\n// });\n\nconst store = configureStore({\n  reducer: {\n    ui: uiSlice.reducer,\n    // shoppingCart: cartSlice.reducer,\n  },\n});\n\nexport const uiActions = uiSlice.actions;\n// export const shoppingCartActions = cartSlice.actions;\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAE9D,MAAMC,OAAO,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,IAAI;EACVC,YAAY,EAAE;IAAEC,aAAa,EAAE;EAAM,CAAC;EACtCC,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,KAAM;MAAEH,aAAa,EAAE,CAACG,KAAK,CAACH;IAAc,CAAC;EACjE;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMI,KAAK,GAAGT,cAAc,CAAC;EAC3BU,OAAO,EAAE;IACPC,EAAE,EAAET,OAAO,CAACQ;IACZ;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAME,SAAS,GAAGV,OAAO,CAACW,OAAO;AACxC;AACA,eAAeJ,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}